"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[9364],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),h=o,u=m["".concat(c,".").concat(h)]||m[h]||d[h]||i;return n?a.createElement(u,r(r({ref:t},p),{},{components:n})):a.createElement(u,r({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var s=2;s<i;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4956:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>r,metadata:()=>l,toc:()=>c,default:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={},r="Connect to an existing Blockchain network on Machine",l={unversionedId:"operation-administration/installation/connect-to-an-existing-network/bare-metal",id:"operation-administration/installation/connect-to-an-existing-network/bare-metal",isDocsHomePage:!1,title:"Connect to an existing Blockchain network on Machine",description:"It is highly recommended to use the Docker-Compose Setup guide instead of this Setup guide. Only use this guide if docker cannot be used",source:"@site/docs/operation-administration/installation/connect-to-an-existing-network/bare-metal.md",sourceDirName:"operation-administration/installation/connect-to-an-existing-network",slug:"/operation-administration/installation/connect-to-an-existing-network/bare-metal",permalink:"/docs/operation-administration/installation/connect-to-an-existing-network/bare-metal",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/operation-administration/installation/connect-to-an-existing-network/bare-metal.md",version:"current",lastUpdatedBy:"openkfwCI",lastUpdatedAt:1654682060,formattedLastUpdatedAt:"6/8/2022",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/operation-administration/installation/README"},next:{title:"Connection Process",permalink:"/docs/operation-administration/installation/connect-to-an-existing-network/connection-process"}},c=[{value:"Table of Contents",id:"table-of-contents",children:[]},{value:"Get the repository",id:"get-the-repository",children:[]},{value:"Blockchain",id:"blockchain",children:[]}],s={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connect-to-an-existing-blockchain-network-on-machine"},"Connect to an existing Blockchain network on Machine"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"It is highly recommended to use the ",(0,o.kt)("a",{parentName:"strong",href:"/docs/operation-administration/installation/connect-to-an-existing-network/docker"},"Docker-Compose Setup guide")," instead of this Setup guide. Only use this guide if docker cannot be used")),(0,o.kt)("p",null,"This guide describes how to connect to an existing network without the use of Docker, Docker-Compose or Kubernetes.\nBefore starting make sure to have ",(0,o.kt)("inlineCode",{parentName:"p"},"node"),",",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," and the ",(0,o.kt)("a",{parentName:"p",href:"https://www.multichain.com/download-community/"},"latest release of MultiChain")," available on your machine.\nTo check if all required tools are installed correctly use following check commands:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"node: ",(0,o.kt)("inlineCode",{parentName:"li"},"node -v")),(0,o.kt)("li",{parentName:"ul"},"npm: ",(0,o.kt)("inlineCode",{parentName:"li"},"npm -v")),(0,o.kt)("li",{parentName:"ul"},"multichain: ",(0,o.kt)("inlineCode",{parentName:"li"},"multichain-util")," & ",(0,o.kt)("inlineCode",{parentName:"li"},"multichaind"))),(0,o.kt)("p",null,"If the above commands cannot be found make sure the tools are installed and the PATH variables are set correctly."),(0,o.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#connect-to-an-existing-blockchain-network-on-machine"},"Connect to an existing Blockchain network on Machine"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#table-of-contents"},"Table of Contents")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#get-the-repository"},"Get the repository")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#blockchain"},"Blockchain"))))),(0,o.kt)("h2",{id:"get-the-repository"},"Get the repository"),(0,o.kt)("p",null,"Clone the Github repository of the components onto the designated machines."),(0,o.kt)("p",null,"Clone the repository:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone https://github.com/openkfw/TruBudget.git\ncd TruBudget\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you work with an existing checkout, make sure you have the latest changes:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre"},"git pull\n")))),(0,o.kt)("h2",{id:"blockchain"},"Blockchain"),(0,o.kt)("p",null,"A blockchain node defines itself as ",(0,o.kt)("inlineCode",{parentName:"p"},"beta node")," if the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"P2P_HOST")," is set."),(0,o.kt)("p",null,"First make sure the alpha node has set its EXTERNAL_IP environment variable and is available (check firewall), otherwise it will not be possible to connect to the alpha node.\nAdapt and set the environment parameters listed below.\nA detailed description can be found in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/environment-variables"},"environment variable overview")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'export PRETTY_PRINT="true"\nexport ORGANIZATION="BetaOrga"\nexport RPC_USER="multichainrpc"\nexport RPC_PASSWORD="password"\nexport RPC_ALLOW_IP="0.0.0.0/0"\nexport MULTICHAIN_DIR="/tmp/beta"\nexport PORT=8086\nexport P2P_PORT=7447\nexport RPC_PORT=8000\nexport API_PORT=8080\nexport P2P_HOST=[IP of alpha node]\nexport EXTERNAL_IP=[IP where this node is external available]\nexport API_HOST=[IP of alpha node API]\n')),(0,o.kt)("p",null,":::hint\nUse absolute paths for environment variables.\nIf it's not the first start and the ",(0,o.kt)("inlineCode",{parentName:"p"},".multichain"),' folder exists already a multichain error will be shown in the logs but multichain will work as expected.\n(Error while creating Multichain\nerr: "ERROR: Blockchain parameter set was not generated.\\n" )\n:::'),(0,o.kt)("p",null,"Navigate into the ",(0,o.kt)("inlineCode",{parentName:"p"},"blockchain")," directory and install the node packages defined in the ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," and start the blockchain using following lines:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd blockchain/\nnpm install\nnpm start\n")),(0,o.kt)("p",null,":::hint\nTo run the process as background process use ",(0,o.kt)("inlineCode",{parentName:"p"},"npm start > blockchain.log 2>&1 &"),", the blockchain.log contains the logs of the blockchain process\n:::"),(0,o.kt)("p",null,"If the logs are showing the line ",(0,o.kt)("inlineCode",{parentName:"p"},"Node ready")," the node is setup correctly.\nThe blockchain can be checked by HTTP-Request ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:8085/version")," using postman, curl or even a browser. The response is the current version of TruBudget's blockchain."))}p.isMDXComponent=!0}}]);